default:
  image: alpine:latest

variables:
  QUAY_REGISTRY_URL: "quay.io"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/rockpass/${CI_COMMIT_TAG}"
  ARTIFACTS_AMD64_GLIBC: rockpass-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}-linux-amd64-glibc
  ARTIFACTS_AMD64_MUSL: rockpass-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}-linux-amd64-musl
  ARTIFACTS_ARM64: rockpass-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}-linux-arm64
  PACKAGE_NAME_AMD64_GLIBC: rockpass-${CI_COMMIT_TAG}-linux-amd64-glibc.tar.xz
  PACKAGE_PATH_AMD64_GLIBC: rockpass-${CI_COMMIT_TAG}-linux-amd64-glibc
  PACKAGE_NAME_AMD64_MUSL: rockpass-${CI_COMMIT_TAG}-linux-amd64-musl.tar.xz
  PACKAGE_PATH_AMD64_MUSL: rockpass-${CI_COMMIT_TAG}-linux-amd64-musl
  PACKAGE_NAME_ARM64: rockpass-${CI_COMMIT_TAG}-linux-arm64.tar.xz
  PACKAGE_PATH_ARM64: rockpass-${CI_COMMIT_TAG}-linux-arm64

stages:
  - Build
  - Package
  - Docker
  - Publish
  - Release

Build Rockpass AMD64 glibc:
  stage: Build
  image: rust:buster
  script:
    - cargo build --release --locked
  artifacts:
    name: ${ARTIFACTS_AMD64_GLIBC}
    paths:
      - target/release/rockpass
  cache:
    key: ${CI_COMMIT_REF_SLUG}-amd64-glibc
    paths:
      - target

Build Rockpass AMD64 musl:
  stage: Build
  image: rust:alpine
  script:
    - apk -U --no-progress add libc-dev sqlite-dev
    - cargo build --release --locked
  artifacts:
    name: ${ARTIFACTS_AMD64_MUSL}
    paths:
      - target/release/rockpass
  cache:
    key: ${CI_COMMIT_REF_SLUG}-amd64-musl
    paths:
      - target

Build Rockpass ARM64:
  stage: Build
  image: rust:alpine
  script:
    - apk -U --no-progress add libc-dev sqlite-dev
    - cargo build --release --locked
  artifacts:
    name: ${ARTIFACTS_ARM64}
    paths:
      - target/release/rockpass
  cache:
    key: ${CI_COMMIT_REF_SLUG}-arm64
    paths:
      - target
  tags:
    - arm64

Package Rockpass AMD64 glibc:
  stage: Package
  script:
    - install -Dm755 "target/release/rockpass" "${ARTIFACTS_AMD64_GLIBC}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${ARTIFACTS_AMD64_GLIBC}/rockpass.toml.example"
    - install -Dm644 "README.md" "${ARTIFACTS_AMD64_GLIBC}/README.md"
    - install -Dm644 "LICENSE" "${ARTIFACTS_AMD64_GLIBC}/LICENSE"
  artifacts:
    name: ${ARTIFACTS_AMD64_GLIBC}
    paths:
      - ${ARTIFACTS_AMD64_GLIBC}/
  needs:
    - Build Rockpass AMD64 glibc
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE != "merge_request_event"

Package Rockpass AMD64 musl:
  stage: Package
  script:
    - install -Dm755 "target/release/rockpass" "${ARTIFACTS_AMD64_MUSL}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${ARTIFACTS_AMD64_MUSL}/rockpass.toml.example"
    - install -Dm644 "README.md" "${ARTIFACTS_AMD64_MUSL}/README.md"
    - install -Dm644 "LICENSE" "${ARTIFACTS_AMD64_MUSL}/LICENSE"
  artifacts:
    name: ${ARTIFACTS_AMD64_MUSL}
    paths:
      - ${ARTIFACTS_AMD64_MUSL}/
  needs:
    - Build Rockpass AMD64 musl
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE != "merge_request_event"

Package Rockpass ARM64:
  stage: Package
  script:
    - install -Dm755 "target/release/rockpass" "${ARTIFACTS_ARM64}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${ARTIFACTS_ARM64}/rockpass.toml.example"
    - install -Dm644 "README.md" "${ARTIFACTS_ARM64}/README.md"
    - install -Dm644 "LICENSE" "${ARTIFACTS_ARM64}/LICENSE"
  artifacts:
    name: ${ARTIFACTS_ARM64}
    paths:
      - ${ARTIFACTS_ARM64}/
  needs:
    - Build Rockpass ARM64
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE != "merge_request_event"

Package Rockpass release AMD64 glibc:
  stage: Package
  script:
    - apk -U --no-progress add xz
    - install -Dm755 "target/release/rockpass" "${PACKAGE_PATH_AMD64_GLIBC}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${PACKAGE_PATH_AMD64_GLIBC}/rockpass.toml.example"
    - install -Dm644 "README.md" "${PACKAGE_PATH_AMD64_GLIBC}/README.md"
    - install -Dm644 "LICENSE" "${PACKAGE_PATH_AMD64_GLIBC}/LICENSE"
    - tar cvJf "${PACKAGE_NAME_AMD64_GLIBC}" "${PACKAGE_PATH_AMD64_GLIBC}"
  artifacts:
    name: ${ARTIFACTS_AMD64_GLIBC}
    paths:
      - ${PACKAGE_NAME_AMD64_GLIBC}
  needs:
    - Build Rockpass AMD64 glibc
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"

Package Rockpass release AMD64 musl:
  stage: Package
  script:
    - apk -U --no-progress add xz
    - install -Dm755 "target/release/rockpass" "${PACKAGE_PATH_AMD64_MUSL}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${PACKAGE_PATH_AMD64_MUSL}/rockpass.toml.example"
    - install -Dm644 "README.md" "${PACKAGE_PATH_AMD64_MUSL}/README.md"
    - install -Dm644 "LICENSE" "${PACKAGE_PATH_AMD64_MUSL}/LICENSE"
    - tar cvJf "${PACKAGE_NAME_AMD64_MUSL}" "${PACKAGE_PATH_AMD64_MUSL}"
  artifacts:
    name: ${ARTIFACTS_AMD64_MUSL}
    paths:
      - ${PACKAGE_NAME_AMD64_MUSL}
  needs:
    - Build Rockpass AMD64 musl
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"

Package Rockpass release ARM64:
  stage: Package
  script:
    - apk -U --no-progress add xz
    - install -Dm755 "target/release/rockpass" "${PACKAGE_PATH_ARM64}/rockpass"
    - install -Dm644 "rockpass.toml.example" "${PACKAGE_PATH_ARM64}/rockpass.toml.example"
    - install -Dm644 "README.md" "${PACKAGE_PATH_ARM64}/README.md"
    - install -Dm644 "LICENSE" "${PACKAGE_PATH_ARM64}/LICENSE"
    - tar cvJf "${PACKAGE_NAME_ARM64}" "${PACKAGE_PATH_ARM64}"
  artifacts:
    name: ${ARTIFACTS_ARM64}
    paths:
      - ${PACKAGE_NAME_ARM64}
  needs:
    - Build Rockpass ARM64
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"

Build and publish branch Docker image:
  stage: Docker
  image: docker
  services:
    - docker:dind
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} .
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
    - docker push ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
    - docker login -u ${QUAY_USERNAME} -p ${QUAY_PASSWORD} ${QUAY_REGISTRY_URL}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME} ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
    - docker push ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PROJECT_ID == "43241571" && $CI_PIPELINE_SOURCE != "merge_request_event" && $CI_COMMIT_REF_PROTECTED == "true"
  needs:
    - Build Rockpass AMD64 musl

Build and publish release Docker image:
  stage: Docker
  image: docker
  services:
    - docker:dind
  script:
    - |
      semver() {
        NUM='0|[1-9][0-9]*'
        SEMVER_REGEX="^(${NUM})\\.(${NUM})\\.(${NUM})$"
        if [[ "${1}" =~ "${SEMVER_REGEX}" ]]; then
          MINOR_PATCH="${1#*.}"
          MAJOR="${1%%.*}"
          MINOR="${MINOR_PATCH%.*}"
          PATCH="${MINOR_PATCH#*.}"
          IMAGE="${2:-$CI_REGISTRY_IMAGE}"
          docker tag ${IMAGE}:latest ${IMAGE}:${MAJOR}
          docker tag ${IMAGE}:latest ${IMAGE}:${MAJOR}.${MINOR}
          docker push ${IMAGE}:${MAJOR}
          docker push ${IMAGE}:${MAJOR}.${MINOR}
        fi
      }
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} .
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - semver ${CI_COMMIT_TAG}
    - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - docker push ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - docker push ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - semver ${CI_COMMIT_TAG} ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
    - docker login -u ${QUAY_USERNAME} -p ${QUAY_PASSWORD} ${QUAY_REGISTRY_URL}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - docker push ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
    - docker push ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - semver ${CI_COMMIT_TAG} ${QUAY_REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"
  needs:
    - Build Rockpass AMD64 musl

Publish Rockpass release:
  stage: Publish
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${PACKAGE_NAME_AMD64_GLIBC} "${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_AMD64_GLIBC}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${PACKAGE_NAME_AMD64_MUSL} "${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_AMD64_MUSL}"
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${PACKAGE_NAME_ARM64} "${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_ARM64}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"

Release:
  stage: Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: |
    release-cli create --name "Release ${CI_COMMIT_TAG}" --tag-name ${CI_COMMIT_TAG} \
      --assets-link "{\"name\":\"${PACKAGE_NAME_AMD64_GLIBC}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_AMD64_GLIBC}\"}" \
      --assets-link "{\"name\":\"${PACKAGE_NAME_AMD64_MUSL}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_AMD64_MUSL}\"}" \
      --assets-link "{\"name\":\"${PACKAGE_NAME_ARM64}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${PACKAGE_NAME_ARM64}\"}"
  rules:
    - if: $CI_COMMIT_TAG && $CI_PROJECT_ID == "43241571"
